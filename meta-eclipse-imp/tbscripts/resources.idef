#ifndef __RESOURCES__
#define __RESOURCES__


tool resources is { }

process Resources is
let
  T : resources,
  Language : str,
  Path : str,
  Ext : str,
  Content : str,
  TermContent : term
in
  rec-connect(T?) 
  . printf("Resources tool connected!\n")
  .
  (
    rec-event(T, create-module(Language?, Path?))
    . snd-note(res-create-module(Language, Path))
    . snd-ack-event(T, create-module(Language, Path))
  +
    rec-event(T, delete-module(Language?, Path?))
    . snd-note(res-delete-module(Language, Path))
    . snd-ack-event(T, delete-module(Language, Path))
  +
    rec-event(T, build-module(Language?, Path?))
    . snd-note(res-module-changed(Language, Path))
    . snd-ack-event(T, build-module(Language, Path))
  + 
    rec-msg(res-save-build(Path?, Ext?, Content?))
    . snd-do(T, save-build(Path, Ext, Content))
    . Content := ""
  +
    rec-msg(res-save-build(Path?, Ext?, TermContent?))
    . printf("resource tool saving content for %s with ext %s\n", Path, Ext)
    . snd-do(T, save-build(Path, Ext, TermContent))
    . TermContent := undefined
  +
    rec-msg(res-clean-build(Path?, Ext?))
    . snd-do(T, clean-build(Path, Ext))
  ) * delta
  
endlet

toolbus(Resources)

#endif