#ifndef __ERROR_VIEWER__
#define __ERROR_VIEWER__

tool error-viewer is {  }

process ErrorViewer is
let
  T : error-viewer,
  Error : term,
  Location : term,
  Path: str,
  Producer : str,
  Summary : term,
  SummaryId : str,
  Panel: str,
  Job : str
in
  rec-connect(T?)
  . 
  (
    rec-msg(ui-show-feedback-summary(Panel?, Summary?))
    . printf("Summary: %t\n", Summary)
    . snd-do(T, show-feedback-summary(Panel, Summary))
  +
    rec-msg(ui-remove-feedback-summary(Panel?, Producer?, SummaryId?))
    . snd-do(T, remove-feedback-summary(Panel, Producer, SummaryId))
  +
    rec-msg(ui-remove-feedback-summary(Panel?, Path?))
    . snd-do(T, remove-feedback-summary(Panel, Path))
  +
    rec-msg(ui-refresh-feedback-summary(Panel?, Summary?))
    . snd-do(T, refresh-feedback-summary(Panel, Summary))
  +
    rec-event(T, location-selected(Location?))
    . snd-msg(ui-location-selected(Location))
    . snd-ack-event(T, location-selected(Location))
  +
    rec-msg(ui-start-job(Job?))
    . snd-do(T, start-job(Job))
  +
    rec-msg(ui-end-job(Job?))
    . snd-do(T, end-job(Job))
  )
  *
  rec-disconnect(T)
endlet


toolbus(ErrorViewer)

process AddJob(Message: str) is
  snd-msg(ui-start-job(Message))

process JobDone(Message: str) is
  snd-msg(ui-end-job(Message))

process ConsoleMessage(Message: str) is
  printf("%s\n", Message)

process Error(Message: str) is
  printf("error: %s\n", Message)
  
process Warning(Message: str) is
  printf("warning: %s\n", Message)

process DisplaySummary(Summary: summary) is
  snd-msg(ui-show-feedback-summary("Issues", Summary))

process RefreshSummary(Summary: summary) is
  snd-msg(ui-refresh-feedback-summary("Issues", Summary))
  
process RemoveSummaryFor(SummaryId: str) is
  snd-msg(ui-remove-feedback-summary("Issues", SummaryId))
  
process RemoveSummary(Producer: str, SummaryId: str) is
  snd-msg(ui-remove-feedback-summary("Issues", Producer, SummaryId))
  
#endif

