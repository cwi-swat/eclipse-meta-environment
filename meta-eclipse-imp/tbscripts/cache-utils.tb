#ifndef __CACHE_UTILS__
#define __CACHE_UTILS__

#include <term-store.idef>
#include <undefined.h>

/* sort of generic caching processes */
process ClearCacheHandler(TableName: str, 
                          Namespace: str,
                          TargetExt: str, 
                          AttributeName: term, 
                          OldValue: term,
                          NewValue: term) is
let
  AttributeEvent: attribute-changed-event,
  ModuleId: module-id,
  Value: term,
  Path: str
in
  MM-Subscribe-Attribute-Changed(<module-id>,Namespace,AttributeName,OldValue,NewValue)
  .
  (
    rec-note(mm-attribute-changed(AttributeEvent?))
    . ACE-GetModuleId(AttributeEvent, ModuleId?)
    . printf("CLEAN CACHE %t %t %t %t %t\n", ModuleId, TableName, Namespace, TargetExt, AttributeName)
    . snd-msg(ts-remove-value(TableName, ModuleId))
    . GetModulePath(ModuleId, Namespace, Path?)
    . snd-msg(res-clean-build(Path, TargetExt))
  )
  * delta
endlet

process InitCache(TableName: str) is
  snd-msg(ts-add-table(TableName, "term"))

process GetCachedValue(TableName: str, Key: term, Value: term?) is
  snd-msg(ts-get-term-value(TableName, Key))
  .
  (
    rec-msg(ts-value(TableName, Key, Value?)) 
  +
    rec-msg(ts-no-value(TableName, Key))
    . Value := UNDEFINED
  )

process PutCachedValue(TableName: str, Key: term, Path: str, Ext : str, Value: term) is
  snd-msg(ts-put-term-value(TableName, Key, Value))
  . printf("PUT CACHE: %t %t %t %t\n", Key, TableName, Path, Ext)
  . snd-msg(res-save-build(Path, Ext, Value))

process ClearCachedValue(TableName: str, Key: term) is
  snd-msg(ts-remove-value(TableName, Key))

#endif /* __CACHE_UTILS__ */
