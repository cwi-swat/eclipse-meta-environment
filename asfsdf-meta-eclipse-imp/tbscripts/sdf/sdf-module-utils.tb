#ifndef __SDF_MODULE_UTILS__
#define __SDF_MODULE_UTILS__

#include <undefined.h>
#include <sdf-namespace.h>

process ModulenameBase(Modulename: str, Name: str?) is
  snd-msg(ioj-get-path-filename(Modulename))
  . rec-msg(ioj-filename(Modulename, Name?))

process ComputeCanonicalLanguagename(Modulename : str, Languagename : str?) is
let
  Directory: str,
  Prefix: str,
  Name: str
in
  LanguageNameFromModuleName(Modulename, Prefix?)
  . ModulenameBase(Modulename, Name?)
  .
  if not-equal(Prefix, UNDEFINED) then
    Prefix := concat(Prefix, "/")
  else
    tau
  fi 
  . Languagename := concat(Prefix, Name)
endlet

process LanguageNameFromModuleName(Modulename: str, Languagename: str?) is
let
  Directory: str,
  Prefix: str,
  Name: str
in
  snd-msg(ioj-get-path-directory(Modulename)) 
  . rec-msg(ioj-directory(Modulename, Directory?))
  .
  if not-equal(Directory, "") then
    snd-msg(ioj-get-path-directory(Directory)) 
    . rec-msg(ioj-directory(Directory, Languagename?))
  else
    Languagename := "" 
  fi
endlet

process ComputeFeatureModulename(Modulename : str, Feature : str, FeatureModulename : str?) is
let
  Directory: str,
  Prefix: str,
  Name: str
in
  LanguageNameFromModuleName(Modulename, Prefix?)
  . ModulenameBase(Modulename, Name?)
  .
  if not-equal(Prefix, "") then
    Prefix := concat(Prefix, "/")
  else
    tau
  fi 
  . FeatureModulename := concat(concat(Prefix,concat(Feature, "/")), Name)
endlet

/**
 * This process connects two modules, by taking the dirname of a 
 * module name twice, then add the feature string, and then adding the
 * basename again to construct a new file name.
 */
process LookupFeatureModuleId(ModuleId: str, Feature : str, NewModuleId : str?) is
let
  Modulename: str,
  Directory: str,
  Prefix: str,
  Name: str,
  FeatureModulename: str
in
  NewModuleId := UNDEFINED
  . MM-GetAttribute(ModuleId, SDF_NAMESPACE, "name", Modulename?)
  . ComputeFeatureModulename(Modulename, Feature, FeatureModulename?)
  . MM-GetModuleIdByAttribute(SDF_NAMESPACE, "name", FeatureModulename, NewModuleId?)
endlet

#endif
