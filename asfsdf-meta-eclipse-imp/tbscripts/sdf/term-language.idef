tool term-language-registrar is { }

process TermLanguageRegistrar is
let
  T : term-language-registrar,
  Language : str,
  Filename : str,
  Modules : list,
  Events : list,
  Event : term,
  Action : str,
  Tip : str,
  Label : str
in
  rec-connect(T?)
  .
  (
    rec-request(T, get-languages)
    . GetAllSdfModuleNames(Modules?)
    . snd-response(T, get-languages(Modules))
  +
    rec-request(T, get-language(Filename?))
    . snd-msg(tlr-get-language(Filename))
    . rec-msg(tlr-language(Filename, Language?))
    . snd-response(T, get-language(Language))
  +
    rec-event(T, set-language(Filename?, Language?))
    . snd-note(tlr-set-language(Filename, Language))
    . snd-ack-event(T, set-language(Filename, Language))
  + 
    rec-msg(tlr-open-editor(Filename?))
    . snd-do(T, open(Filename))
  +
    rec-event(T, perform-action(Action?, Language?, Filename?))
    . snd-ack-event (T, perform-action)
    . snd-note(handle-action(Action, Language, Filename))
  +
    rec-msg(tlr-register-language-action(Language?, Label?, Tip?, Action?))
    . printf("registering action: %t\n", Action)
    . snd-do(T, register-action(Language, Label, Tip, Action))
  +
    rec-msg(tlr-unregister-language-action(Language?, Label?))
    . snd-do(T, unregister-action(Language, Label))
  ) * delta
endlet

toolbus(TermLanguageRegistrar)

