#ifndef __ASF_GUI_LISTENERS__
#define __ASF_GUI_LISTENERS__
 
#include <undefined.h>
#include <sdf-module-utils.tb>
#include <dynamic-language-actions.idef>
#include <sdf-namespace.h>
#include <module-utils.tb>
#include <sdf-utils.tb>
#include <cache-utils.tb>
#include <error-viewer.idef>

process LanguageFeatureMenuListener(Feature : str, Action : str, Info : str) is
let
  Event: attribute-changed-event,
  ModuleId: module-id,
  Path: term,
  Modulename: str,
  FeatureModulename: str,
  Languagename: str,
  MenuName: str,
  OldValue: term,
  Pid: int,
  Tip: str
in
  MM-Subscribe-Attribute-Changed(<module-id>,SDF_NAMESPACE,"status",identified,<term>) 
  . printf("Language feature listener started: %s will start %s\n", Feature, Action)
  .
  (
    rec-note(mm-attribute-changed(Event?))
    . ACE-GetModuleId(Event, ModuleId?)
    . SDFGetModulename(ModuleId, Modulename?)
    . printf("Trying to find feature for %s\n", Modulename)
    .
    if not-equal(Modulename, UNDEFINED) then
      ComputeFeatureModulename(Modulename, Feature, FeatureModulename?)
      . printf("Module exists: %t with FeatureModulename %t\n", Modulename, FeatureModulename)
      .
      if equal(Modulename, FeatureModulename) then
         ModulenameBase(Modulename, MenuName?)
         . printf("Feature %s identified!\n", FeatureModulename)
         . ComputeCanonicalLanguagename(Modulename, Languagename?)
         . Tip := concat(Info, concat(" using the equations of ", FeatureModulename))
         . snd-msg(dla-register-language-action(Languagename, action(Feature,Tip,Action)))
         . create(LanguageFeatureRemoveListener(ModuleId, Languagename, action(Feature, Tip, Action)), Pid?)
      else
        tau
      fi	 
    else
      tau
    fi
  )
  *
  delta
endlet

toolbus(LanguageFeatureMenuListener("format", "PrettyPrintAction","Format this term"))
toolbus(LanguageFeatureMenuListener("run", "RunAction","Reduce this term"))
toolbus(LanguageFeatureMenuListener("debug", "DebugAction","Debug this term"))
toolbus(LanguageFeatureMenuListener("check", "CheckAction","Check this term"))
toolbus(LanguageFeatureMenuListener("extract", "ExtractAction","Extract data from this term"))
toolbus(LanguageFeatureMenuListener("draw", "DrawAction","Display using Scalable Vestor Graphics"))
toolbus(LanguageFeatureMenuListener("test", "TestAction","Run unit tests"))
toolbus(LanguageFeatureMenuListener("display", "DisplayAction","Display a Swing GUI"))

process LanguageFeatureRemoveListener(ModuleId: module-id, Language : str, ActionDef: term) is
  subscribe(mm-module-deleted(ModuleId))
  .
  (
    rec-note(mm-module-deleted(ModuleId))
    . snd-msg(dla-unregister-action(Language, ActionDef))
  )
  *
  delta

#endif
