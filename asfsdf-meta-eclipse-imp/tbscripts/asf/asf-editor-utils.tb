#ifndef __ASF_EDITOR_UTILS__
#define __ASF_EDITOR_UTILS__

#include <asf-namespace.h>
#include <module-manager.tb>
#include <module-utils.tb>
#include <asf-utils.tb>
#include <undefined.h>

process EditEquations(ModuleId: module-id) is
let
  Path: str,
  AsfPath: str,
  AsfModuleId : module-id
in
  GetModulePath(ModuleId, SDF_NAMESPACE, Path?)
  . SdfPath2AsfPath(Path?, AsfPath?)
  . GetOrCreateModule(ASF_NAMESPACE, AsfPath, AsfModuleId?)
  . snd-msg(et-open-editor(AsfPath, ASF_NAMESPACE))
endlet


process ReduceMyTerm(ModuleId: module-id, Filename: str, Debugging: term) is
let
  Result: term,
  ResultText: str,
  TermModuleId : module-id,
  TermPath : str,
  Language : str,
  SdfModuleId : module-id
in
  MM-GetAttribute(ModuleId, TERM_NAMESPACE, "language", Language?)
  . if not-equal(Language, UNDEFINED) then
      MM-GetModuleIdByAttribute(SDF_NAMESPACE, "name", Language, SdfModuleId?)
      . Reduce(SdfModuleId, Filename, Debugging, Result?)
      . snd-msg(unparse(Result))
      . rec-msg(unparsed-text(ResultText?))
      . printf("Reduced term to %s\n", ResultText)
      . TermPath := concat(Filename, "-reduct.trm")
      . GetOrCreateModule(TERM_NAMESPACE, TermPath, TermModuleId?)
      . MM-SetAttribute(TermModuleId, TERM_NAMESPACE, "language", Language)
      . snd-msg(et-edit-term(TermPath, TERM_NAMESPACE, ResultText))
    fi
endlet

#endif /* __ASF_EDITOR_UTILS__ */
